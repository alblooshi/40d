{"ast":null,"code":"var _jsxFileName = \"E:\\\\abdulla\\\\developedbyed\\\\src\\\\components\\\\LibrarySong.js\";\nimport React from \"react\";\nimport { playAudio } from \"../util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = ({\n  name,\n  artist,\n  cover,\n  id,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying,\n  setSongs,\n  active\n}) => {\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter(state => state.id === id);\n    setCurrentSong({ ...selectedSong[0]\n    }); //Set Active in library\n\n    const newSongs = songs.map(song => {\n      if (song.id === id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs); //Play audio\n\n    playAudio(isPlaying, audioRef);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: `library-song ${active ? \"selected\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: cover,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["E:/abdulla/developedbyed/src/components/LibrarySong.js"],"names":["React","playAudio","LibrarySong","name","artist","cover","id","setCurrentSong","songs","audioRef","isPlaying","setSongs","active","songSelectHandler","selectedSong","filter","state","newSongs","map","song"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,SAA1B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,MAFmB;AAGnBC,EAAAA,KAHmB;AAInBC,EAAAA,EAJmB;AAKnBC,EAAAA,cALmB;AAMnBC,EAAAA,KANmB;AAOnBC,EAAAA,QAPmB;AAQnBC,EAAAA,SARmB;AASnBC,EAAAA,QATmB;AAUnBC,EAAAA;AAVmB,CAAD,KAWd;AACJ,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,YAAY,GAAGN,KAAK,CAACO,MAAN,CAAcC,KAAD,IAAWA,KAAK,CAACV,EAAN,KAAaA,EAArC,CAArB;AACAC,IAAAA,cAAc,CAAC,EAAE,GAAGO,YAAY,CAAC,CAAD;AAAjB,KAAD,CAAd,CAF8B,CAG9B;;AACA,UAAMG,QAAQ,GAAGT,KAAK,CAACU,GAAN,CAAWC,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACb,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,EACL,GAAGa,IADE;AAELP,UAAAA,MAAM,EAAE;AAFH,SAAP;AAID,OALD,MAKO;AACL,eAAO,EACL,GAAGO,IADE;AAELP,UAAAA,MAAM,EAAE;AAFH,SAAP;AAID;AACF,KAZgB,CAAjB;AAaAD,IAAAA,QAAQ,CAACM,QAAD,CAAR,CAjB8B,CAmB9B;;AACAhB,IAAAA,SAAS,CAACS,SAAD,EAAYD,QAAZ,CAAT;AACD,GArBD;;AAsBA,sBACE;AACE,IAAA,OAAO,EAAEI,iBADX;AAEE,IAAA,SAAS,EAAG,gBAAeD,MAAM,GAAG,UAAH,GAAgB,EAAG,EAFtD;AAAA,4BAIE;AAAK,MAAA,GAAG,EAAEP,KAAV;AAAiB,MAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9CD;;KAAMF,W;AAgDN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { playAudio } from \"../util\";\n\nconst LibrarySong = ({\n  name,\n  artist,\n  cover,\n  id,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying,\n  setSongs,\n  active,\n}) => {\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter((state) => state.id === id);\n    setCurrentSong({ ...selectedSong[0] });\n    //Set Active in library\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    //Play audio\n    playAudio(isPlaying, audioRef);\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${active ? \"selected\" : \"\"}`}\n    >\n      <img src={cover} alt=\"\" />\n      <div className=\"song-description\">\n        <h3>{name}</h3>\n        <h4>{artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}